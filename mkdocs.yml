---
site_name: 'PyKX'
site_author: 'KX'
site_description: 'PyKX Documentation'
site_url: 'https://code.kx.com/pykx'
copyright: 'Â© 2025 Kx Systems, Inc. KX and kdb+ are registered trademarks of Kx Systems, Inc., a subsidiary of FD Technologies plc.'
site_dir: 'public'
dev_addr: 'localhost:8080'

use_directory_urls: false

# Keep commented out until PyKX is open-source
repo_url: 'https://github.com/kxsystems/pykx'
edit_uri: 'edit/main/docs/'

extra_css:
  - https://code.kx.com/assets/stylesheets/main.b941530a.min.css
  # - https://code.kx.com/stylesheets/2021.css
  # - https://code.kx.com/stylesheets/prism.css
  - https://code.kx.com/stylesheets/extra.css
  - stylesheets/mkdocstrings.css
  - https://code.kx.com/stylesheets/dashboards.css
  - https://code.kx.com/dashboards/stylesheets/dashboards.css
  - stylesheets/swagger.css
  # More accessible colors in the edited versions
  - stylesheets/2021-edited.css
  - stylesheets/prism-edited.css

extra_javascript:
  - https://code.kx.com/scripts/prism.js
  - https://code.kx.com/scripts/extra.js
  - https://code.kx.com/scripts/mathjax.js
  - https://code.kx.com/scripts/polyfill.min.js
  - https://code.kx.com/scripts/tex-mmmdtml.js
  - 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-MML-AM_CHTML'
  - 'https://code.jquery.com/jquery-3.6.0.min.js'
  - 'https://use.fontawesome.com/3dbf29ed12.js'
  # this relative path is needed to source from code.kx.com!!!
  - "&period;&period;/&period;&period;/pykx/scripts/versions.js"
  # Uncomment only for local test 
  # - 'scripts/versions.js'


markdown_extensions:
  - abbr
  - admonition
  - attr_list
  - md_in_html
  - extra
  - def_list
  - meta
  - tables
  - markdown_grid_tables
  - pymdownx.arithmatex:
      generic: true
  - pymdownx.caret
  - pymdownx.inlinehilite
  - pymdownx.details
  - pymdownx.emoji:
      emoji_index: !!python/name:materialx.emoji.twemoji
      emoji_generator: !!python/name:materialx.emoji.to_svg
      options:
        custom_icons:
          - custom_theme/.icons
  - pymdownx.tabbed:
      alternate_style: true
  - pymdownx.extra
  - pymdownx.highlight:
      use_pygments: false
  - pymdownx.magiclink
  - pymdownx.mark
  - pymdownx.superfences:
      custom_fences:
        - name: mermaid
          class: mermaid
          format: !!python/name:pymdownx.superfences.fence_code_format
  - pymdownx.tilde
  - toc:
      permalink: false
      title: On this page

plugins:
  - autorefs
  - mkdocs-jupyter:
      execute: True
      include: ["*.ipynb"]
      include_source: True # Let users download the Jupyter notebook to use interactively
      ignore: ["examples/streaming/*.ipynb", "examples/streaming/*.py"]
      allow_errors: False
      remove_tag_config:
        remove_input_tags:
          - hide_code
  - exclude:
      glob:
        - internal/*
  - mkdocstrings:
      handlers:
        python:
          rendering:
            docstring_section_style: 'table'
            heading_level: 2
            line_length: 80
            members_order: 'source'
            merge_init_into_class: true
            separate_signature: true
            show_bases: true
            show_if_no_docstring: false
            show_object_full_path: false
            show_root_full_path: true
            show_root_heading: true
            show_root_toc_entry: true
            show_signature: true
            show_source: false
            show_submodules: false

          import:
            - https://docs.python.org/3/objects.inv
            - https://numpy.org/doc/stable/objects.inv
            - https://pandas.pydata.org/docs/objects.inv
  - render_swagger
  - search
  - exclude-search:
      exclude:
        - user-guide/advanced/Pandas_API.ipynb
        - examples/interface-overview.ipynb
        - examples/jupyter-integration.ipynb
        - examples/db-management.ipynb
        - examples/streaming/Evolving System.ipynb
  - spellcheck:
      known_words: spelling.txt
      ignore_code: true    # Ignore words in <code> tags
      min_length: 2        # Minimum length of words to consider
      # max_capital: 1     # Maximum number of capital letters in a word
      allow_unicode: false # Keep unicode characters
      skip_files:          # Skip files entirely
        - comparisons.md # Skipped due to false positives
        - performance.md # Skipped due to false positives
        - user-guide/advanced/Pandas_API.ipynb
        - examples/interface-overview.ipynb
        - examples/jupyter-integration.ipynb
        - examples/db-management.ipynb
        - examples/streaming/Evolving System.ipynb
        - examples/charting.ipynb


theme:
  name: material
  custom_dir: custom_theme/
  favicon: https://code.kx.com/favicon.ico
  font: false
  icon:
    repo: fontawesome/brands/git-alt
    edit: material/pencil
    view: material/eye
  features:
    - content.tabs.link # Insiders
    - header.autohide
    - navigation.tabs
    - navigation.footer
    - content.code.annotate
    - content.action.edit
    - content.code.copy
  palette:
  - media: "(prefers-color-scheme: light)"
    scheme: kx-light
    toggle:
      icon: material/toggle-switch-off-outline
      name: Switch to dark mode
  - media: "(prefers-color-scheme: dark)"
    scheme: slate
    toggle:
      icon: material/toggle-switch
      name: Switch to light mode

  language: en
docs_dir: docs

nav:
  - Home: 'https://code.kx.com/insights/'
  - kdb+ and q: 'https://code.kx.com/q'
  - kdb Insights SDK: "https://code.kx.com/insights/core"
  - kdb Insights Enterprise: "https://code.kx.com/insights/platform/"
  - KDB.AI: "https://code.kx.com/kdbai/"
  - PyKX:
    - index.md
    - Get Started:
      - Install: getting-started/installing.md
      - Quickstart guide: getting-started/quickstart.md
    - Learn:
      - What is PyKX?: getting-started/what_is_pykx.md
      - Objects and attributes: learn/objects.md
      - Databases: user-guide/advanced/database/index.md
      - Modes of operation: user-guide/advanced/modes.md
      - Performance tips: user-guide/advanced/performance.md
      - Why upgrade from embedPy: pykx-under-q/upgrade.md
      - Glossary: extras/glossary.md
      - Blogs, articles, videos: blogs.md
    - How to:
      - Configure PyKX: user-guide/configuration.md
      - Interact with data:
        - Create objects: user-guide/fundamentals/creating.md
        - Use objects: user-guide/fundamentals/evaluating.md
        - Index objects: user-guide/fundamentals/indexing.md
        - Convert data: user-guide/fundamentals/conversion_considerations.md
        - Convert text: user-guide/fundamentals/text.md
        - Convert nulls and infinities: user-guide/fundamentals/nulls_and_infinities.md
        - Convert temporal data: user-guide/fundamentals/temporal.md
      - Interact with databases:
        - Generate databases: user-guide/advanced/database/db_gen.md
        - Load databases: user-guide/advanced/database/db_loading.md
        - Manage databases: user-guide/advanced/database/db_mgmt.md
      - Query data:
        - Introduction: user-guide/fundamentals/query/index.md
        - Query with Python: user-guide/fundamentals/query/pyquery.md
        - Query with SQL: user-guide/fundamentals/query/sql.md
        - Query with q: user-guide/fundamentals/query/qquery.md
        - Performance considerations: user-guide/fundamentals/query/perf.md
      - Communicate via IPC: user-guide/advanced/ipc.md
      - Capture real-time data:
        - Introduction: user-guide/advanced/streaming/index.md
        - Capture and Store: user-guide/advanced/streaming/basic.md
        - Publish data: user-guide/advanced/streaming/publish.md
        - Subscribe to data: user-guide/advanced/streaming/subscribe.md
        - Analyze streaming data: user-guide/advanced/streaming/rta.md
        - Build custom APIs: user-guide/advanced/streaming/custom_apis.md
        - Manage query routing: user-guide/advanced/streaming/gateways.md
        - Complex infrastructure: user-guide/advanced/streaming/complex.md
      - Apply attributes: user-guide/advanced/attributes.md
      - Compress and encrypt data: user-guide/advanced/compress-encrypt.md
      - Import existing q functions: user-guide/advanced/context_interface.md
      - Run remote functions: user-guide/advanced/remote-functions.md
      - Serialize data: user-guide/advanced/serialization.md
      - Use PyKX in subprocesses: user-guide/advanced/subprocess.md
      - Run q code multithreaded: user-guide/advanced/threading.md
      - Manage your license: user-guide/advanced/license.md
      - Use Python in a q process: pykx-under-q/intro.md
    - Reference:
      - API references:
        - q functions and operators: api/pykx-execution/q.md
        - Execution classes: api/pykx-execution/embedded_q.md
        - q contexts: api/pykx-execution/ctx.md
        - Emulated q console: api/pykx-execution/console.md
        - Data generation: api/random.md
        - Schema generation: api/schema.md
        - Query data: api/query.md
        - Query classes: api/columns.md
        - Registering custom operations: api/pykx-q-data/register.md
        - Compression and encryption: api/compress.md
        - Database management: api/db.md
        - File I/O: api/pykx-save-load/fileio.md
        - q IPC interface: api/ipc.md
        - Streamlit integration: api/streamlit.md
        - Serialize/deserialize: api/serialize.md
        - Remote Python execution: api/remote.md
        - Real-time capture: api/tick.md
        - System command wrappers: api/system.md
        - Utility functions: api/util.md
        - Reimporter module: api/reimporting.md
        - License management: api/license.md
        - PyKX under q: pykx-under-q/api.md
      - Data types and conversions:
        - Python to PyKX: api/pykx-q-data/toq.md
        - Wrappers: api/pykx-q-data/wrappers.md
        - PyKX to Python: api/pykx-q-data/type_conversions.md
      - Pandas API: user-guide/advanced/Pandas_API.ipynb
      - Exceptions: api/exceptions.md
    - Integrations:
      - NumPy: user-guide/advanced/numpy.md
      - Streamlit: user-guide/advanced/streamlit.md
      - Python charting libraries: examples/charting.ipynb
      - Jupyter Integration: examples/jupyter-integration.ipynb
    - Examples:
      - PyKX Introduction Notebook: examples/interface-overview.ipynb
      - Subscriber: examples/subscriber/readme.md
      - Compress and encrypt: examples/compress_and_encrypt/readme.md
      - Database creation and management: examples/db-management.ipynb
      - IPC: examples/ipc/README.md
      - PyKX as a server: examples/server/server.md
      - Real-time streaming: examples/streaming/index.md
      - Multithreaded execution: examples/threaded_execution/threading.md
    - Releases:
      - Release notes:
        - PyKX: release-notes/changelog.md
        - PyKX under q: release-notes/underq-changelog.md
      - 2.x -> 3.x Upgrade : upgrades/2030.md
      - Roadmap: roadmap.md
      - Beta features:
        - Introduction: beta-features/index.md
        - PyTorch Conversions: beta-features/torch.md
    - Help and Support:
      - Troubleshooting: help/troubleshooting.md
      - FAQ: help/faq.md
      - PyKX support: help/support.md
      - Issues and limitations: help/issues.md
      - PyKX license: license.md
      - Contributors: contributors.md
  - APIs: 'https://code.kx.com/insights/api/index.html'
  - Licensing: 'https://code.kx.com/insights/licensing/licensing/'
  - Help: 'https://code.kx.com/home/support.html'
